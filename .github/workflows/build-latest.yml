name: Develop Build

on:
  push:
    branches:
      - main
      - develop
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: frontend install
        run: yarn install
        working-directory: ./frontend
      - name: frontend build
        run: yarn run build
        working-directory: ./frontend
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Run test
        run: cargo test --all-features
  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--doc --tests --ignore-tests --ciserver github-ci --out Lcov'
      - name: Archive code coverage report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: |
            ./lcov.info
      - name: upload to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: './lcov.info'
  formatter:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Format
        run: cargo fmt --all -- --check
  clippy-check:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Clippy
        run: cargo clippy --all-targets -- -D warnings